
* {
	box-sizing:border-box;
}

html, body {
  padding: 0;
  margin: 0;
  scroll-behavior:smooth;
}

body {
  background-color: #0A0A2A;
  font-family: Helvetica, sans-serif;
  padding-bottom: 100px;
  data-scroll-time:4;
  overflow-x: hidden;
}

p a:link {
	text-decoration: none;
	color: orangered;
}

h1, h2, h3 {
  margin: 0 0 .75em 0;
  font-family: 'Righteous', cursive;
}

h2 {
	color: transparent;
	background: #061543;
	-webkit-background-clip: text;
	-moz-background-clip: text;
	background-clip: text;
	text-shadow: 0px 3px 3px rgba(255,255,255,0.5);
}

h2.desc {
	color: #fff; 
	text-align:center;
	font-size: 2em;
	text-shadow: -5px 5px 0px #00e6e6, 
				 -10px 10px 0px #01cccc, 
				 -15px 15px 0px #00bdbd;
}

header{
	display:block;
	background-color:#2d3748;
	padding: 15px 15px 22px 15px;
	color:#f7fafc;
	font-weight:400;
	font-size:1.25em;
	line-height:.8;
	position:fixed;
	width: 100%;
	top: 0;
	z-index: 5;
}

header span{
	font-weight:700;
	font-size:1.0625em;
	color: #61dafb;
}

.primaryNav{background-color:#2d3748}

.primaryNav ul{
	list-style:none;
	display:flex;
	margin: 1em 0 -0.7em 0;
	padding-left:0
}

.primaryNav li{
	margin:0;
}

.primaryNav li:last-child {
       margin-left: auto;
}

.primaryNav a:link,
.primaryNav a:visited{
	padding:5px 15px 5px;
	background-color:#2d3748;
	color:#f7fafc;
	text-decoration:none
}

.primaryNav a:hover{background-color:#1a202c}

/* Responsive Mobile icon */
.primaryNav .icon {
  display: none;
}

.spacer {height: 5em}

code {
	color: #fff;
	max-width: 100%;
	overflow-x: auto;
	vertical-align: middle;
	border-radius: 5px;
	white-space: pre;
	display: inline-block;
	margin: 0;
	margin-right: 0px;
	margin-left: 0px;
	font: 1.625em "Courier New", Courier, "Liberation Mono", monospace;
	font-size: .92em;
	background: teal;
	padding: 0 0.5em;
	box-shadow: inset 0 1px 10px rgba(0,0,0,0.3),0 1px 0 rgba(255,255,255,0.1),0 -1px 0 rgba(0,0,0,0.5);
}

kbd {font-size:1.25em}

input {
  font-size: .92em;
  font-family: Helvetica, sans-serif;
}

/* To initiate a flexbox layout, there must be a container/wrapper with the value of display:flex that will permit children to employ flex values */
.form-row {
  padding: 10px 0;
  display: flex;
}

.form-row label {
  padding-right: 10px;
}

/* flex 1 is the baseline value to evenly distribute the horizontal space taken up by elements. Flex values specify how much the item will grow relative to the rest of the flexible items */
.form-row input {
  flex: 1;
}

/* second example */
.column-layout {
  max-width: 1300px;
  background-color: #FFF;
  margin: 40px auto 0 auto;
  line-height: 1.65;
  padding: 20px 50px;
  display: flex;
}

.main-column {
  flex: 3;
  order: 2;
  margin-right: 1em;
  border-right: 3px ridge;
  padding-right: 12px;
  border-left: 3px ridge;
  padding-left: 12px;
}

aside {
	flex:1;
}
.sidebar-one {
  order: 1;
  margin-right: 1em; 
}

.sidebar-two {
  order: 3;
}

/* third example: row of boxes containing text */
.call-outs-container {
  max-width: 1400px;
  margin: 40px auto 0 auto;
}

.call-out {
  padding: 20px;
  box-sizing: border-box;
  margin-bottom: 20px;
  flex-basis: 30%;
}

.call-out:nth-child(1) {background-color: #c0dbe2;}
.call-out:nth-child(2) {background-color: #cdf1c3;}
.call-out:nth-child(3) {background-color: #ccb9da;}

/* fourth example */
.fixed-size-container {
  max-width: 1400px;
  margin: 40px auto 0;
  background-color: #FFF;
  padding: 30px 0;
  display: flex;
  align-items: center;
  justify-content: space-around;
  flex-wrap: wrap;
}

.fixed-size {
  width: 150px;
  height: 100px;
  background-color: #990b47;
  color: #FFF;
  line-height: 100px;
  text-align: center;
  font-weight: bold;
  font-size: 4em;
  font-family: 'Corben', cursive;
}

/* fifth example. Flexbox centers elements very simply*/
.banner {
  display: flex; /*======= container for the centered element =======*/
  flex-direction: column;
  height: 400px;
  max-width: 700px;
  margin: 40px auto 40px auto;
  background: linear-gradient(40deg, #6F2717,#EE8F40,#6F2717);
  background-size: 500% 200%;
  animation: bannerbg linear infinite 8s;
  animation-direction: alternate;
  border: inset aliceblue 6px;
}

@keyframes bannerbg{
    0% {background-position: 0%}
    100% {background-position: 100%}
}


/* sixth example */
.equal-height-container {
  max-width: 900px;
  margin: 5em auto;
  display: flex;
  flex-wrap: wrap;
  border: inset aliceblue;
}

.first {
  background-color: #FFF;
  padding: 20px;
  flex: 1;  
}

.second {
  flex: 1;
  display: flex;
  flex-direction: column; /* ==== By default, flexbox has a flex-direction of row, which forces its child elements into a columned layout within a row. Here we override this by giving the container itself a column quality that will enable child elements to take up rows of horizontal space, sort of like block elements ==== */
}

.second-a,
.second-b {
  flex: 1;
  padding: 1em;
}

.second-a { 
  background-color: #c0dbe2;
}
.second-b {
  background-color: #cdf1c3;
}

/* An example of transform properties */

.transform-example {
  width: 100vw;
  height: 100vh;
}

.box {
  width: 200px;
  height: 200px;
  transition-duration: 2s;
  transition-property: width;
  display: flex;
  justify-content: center;
  align-items: center;
 
  /* transition-delay can allow for a more naturally transitioning appearance
  transition-delay: .7s;
  */
}

.transform-example:hover .box {
  width: 600px;
   border:inset;
}

.one {
  background: #07BEB8;
  transition-timing-function: linear;
}

.two {
  background: #3DCCC7;
  transition-timing-function: ease-in;
}

.three {
  background: #9CEAEF;
  transition-timing-function: ease-out;
}

.four {
  background: #B1F8F2;
  transition-timing-function: ease-in-out;
 }
 
 .five {
 background: teal;
  transition-timing-function: cubic-bezier(0,1.3,1,-0.07); /*To find the best cubic-bezier value for a project, use the element inspector & click on the icon next to the transition-timing-function to view and experiment with graphic alternatives. Copy/paste the cubic-bezier value to the CSS.
  Alternatives:  transition-timing-function:cubic-bezier(.64,-0.74,.32,1.5); cubic-bezier(.77, 0, .18, 1);
*/
}


/* breathing icon */
.breatheSvg {
	content: url('Chakra2.svg');
	width: 60px;
	height: auto;
	animation: chakra 5s infinite;
	float:left;
	margin: auto 20px;
}

@keyframes chakra{
0% {
    transform: scale(1.2);
 }
50% {
    transform: scale(1);
 }
100% {
    transform: scale(1.2);
 }
}

/* Wavy blue listitem divider */
.makeit-divider {
	position: relative;
	overflow: visible;
}

.makeit-divider::before {
    width: 100%;
    height: 4px;
    top: 0;
    left: 0;
    position: absolute;
    content: "";
    background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='18' height='4'%3E%3Cpath d='M9 2c3 2 6 2 9 0M0 2c3-2 6-2 9 0' stroke='%2368ebca' fill='transparent'/%3E%3C/svg%3E");
    background-repeat: repeat;
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
}

ol.makeit-list {
	margin-bottom: 10px;
	-webkit-transition: -webkit-transform .5s;
	transition: -webkit-transform .5s;
	transition: transform .5s;
	transition: transform .5s,-webkit-transform .5s;
	counter-reset: item;
	display: block;
	margin: 0;
	margin-bottom: 0px;
	padding: 0;
	list-style: none;
	text-align:left;
}

.makeit-list li {
	list-style:none;
	width: 100%;
	padding-right: 0;
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	line-height: 1;
	white-space: normal;
	width: 100%;
	vertical-align: middle;
	border: none;
	font-size: 1em;
	line-height: 1.125;
	padding-top: 20px;
	margin-bottom: 0;
	
}

/* Auto numerical list items */
.makeit-list li::before {
	font-weight: 800;
	content: counter(item);
	counter-increment: item;
	-webkit-box-flex: 0;
	font-family: 'Corben', cursive;
	font-size: 3.5em;
	color: #ff685d;
	float: left;
	height: 60px;
	white-space:normal;
	display: block;
	width: 20%;
	padding-right: 8px;
}

/* Control Buttons */

div.controls {
	display:flex;
	justify-content:center;
    align-items: center;
	width: 100%;
}
.controlbtn {
  background-color:  #fa6448;
  margin: 4px;
  text-align: center;
  font-size: 30px;
  border-radius: 8px;
  box-shadow: 1px 2px 4px grey;
  transition: .3s;
  width:60px;
  height:60px;
  line-height:2.1
}
.controlbtn.pausebt {
	transform: rotate(90deg);
    width:61.5px;
    box-shadow:2px -2px 4px grey;
}
.controlbtn:hover {
	box-shadow:-1px -1px grey;
}
.controlbtn.pausebt:hover {
	box-shadow: -1px 1px grey;
}


/*  =================
	CSS GRID
	=================  */
.describe {
	background-color: #fff;
	padding: 2% 20%;
}

.describe-center {
	margin-top: 5em;
	margin-bottom: -3%;
	text-align:center;
}

.grid-container {
  display: grid;
  grid-template-columns: auto auto auto;
  grid-gap: 10px;
  background-color: #fff;
  padding: 10px 20%;
}

.grid-container > div {
  background-color: rgb(152, 229, 232);
  text-align: center;
  padding: 20px 0;
  font-size: 30px;
  box-shadow: inset 0 1px 10px rgba(0,0,0,0.3),0 1px 0 rgba(255,255,255,0.1),0 -1px 0 rgba(0,0,0,0.5);
}

/* To set different column widths of grid items, the first value tells the item where to start, the second where to end */
.item1 {
  grid-column: 1/span 2;
}
.item8 {
  grid-column: 2/span 2;
}
/* To set row size, the first value tells the item in which row to begin, the second where to end */
.item2 {
  grid-row: 2 / 5;
  grid-column: 1/span 2;
}

/* "CENTERED"  animation */
 /*======= Within a flex container, margin: auto is all that's necessary to center an element vertically and horizontally =======*/
.center-me {
  display:flex;
  margin: auto;
  width: 8em;
  font: bolder 2.3em 'Open Sans', sans-serif;
  color: white;
  justify-content: space-around;
}
.center-me div {
  animation: centerme 2s infinite alternate; 
}
@keyframes centerme {
  5% {
	  opacity: 0.3; 
	  color: #ffea00;
	}
  100% {
	color: #a00; 
	text-shadow: 1.4px 2px 2.4px #f00, 5px 5px 5px #929292;	
    }
}
div:nth-child(2) {
  animation-delay: .25s;
}

div:nth-child(3) {
  animation-delay: .50s;
}
div:nth-child(4) {
  animation-delay: .75s;
}
div:nth-child(5) {
  animation-delay: 1s;
}
div:nth-child(6) {
  animation-delay: 1.25s;
}
div:nth-child(7) {
  animation-delay: 1.50s;
}
div:nth-child(8) {
  animation-delay: 1.75s;
}

/* loading animation */

.loading {
  position: relative;
  left: 50%;
  bottom: 10%;
  width: 9em;
  height: 9em;
  margin: -4em 0 0 -4em;
  overflow: hidden;
  background: rgba(0, 0, 0, 0.35);
  border-radius: 50%;
  border: groove 8px #af34af;
}
.loading > div {
  position: absolute;
  width: 8em;
  height: 8em;
  animation: alpha 2.25s linear infinite forwards;
  background: rgba(231, 76, 60, 0.75);
}
.loading > div:nth-child(1) {
  top: -50%;
  left: -50%;
}
.loading > div:nth-child(2) {
  top: -50%;
  right: -50%;
}
.loading > div:nth-child(3) {
  bottom: -50%;
  right: -50%;
}
.loading > div:nth-child(4) {
  bottom: -50%;
  left: -50%;
}

@keyframes alpha {
  0% {
    -moz-transform: rotate(0);
    -ms-transform: rotate(0);
    -webkit-transform: rotate(0);
    transform: rotate(0);
    background: rgba(231, 76, 60, 0.75);
  }
  25% {
    background: rgba(230, 126, 34, 0.75);
  }
  50% {
    border-radius: 50%;
    background: rgba(142, 68, 173, 0.75);
  }
  75% {
    background: rgba(41, 128, 185, 0.75);
  }
  100% {
    -moz-transform: rotate(360deg);
    -ms-transform: rotate(360deg);
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
    background: rgba(231, 76, 60, 0.75);
  }
}


.upbutt {
	border-radius: 50%;
	width: 35px;
	height: 35px;
	background-color: teal;
	text-align: center;
	position: fixed;
	right: 20px;
	top: 50%;
	transition: transform .2s;
}
.upbutt a {
	text-decoration: none;
	color: #fff;
	font-size: 2.7em;
	line-height: 1.1;
}

.upbutt:hover {
	transform: scale(1.3);
	
}


/*  =================
	MEDIA QUERIES
	=================  */

@media (min-width: 900px) {
  .call-outs-container {
    display: flex;
    justify-content: space-around;
  }
}

@media screen and (max-width:800px){

	.breatheSvg {float:none;}
	
	/* Responsive mobile menu */
	.primaryNav ul {
		flex-direction: column;
		height: 0;
		margin:0;
	}
	.primaryNav li {
		margin: 8px 0;
	}

	.primaryNav.responsive {
		position: relative;
	}

	.primaryNav ul li {
		transform:translateX(-100%);
		transition:.6s;
    }
	.primaryNav.open ul {
	   height: auto;
	  }
   .primaryNav.open ul li {
		float: none;
    	transform:translateX(0);
		text-align: left;
	}
	.primaryNav ul li:last-child {
		margin-left:0;		
	}
	.primaryNav .icon {
		float: right;
		display: block;
	}
	.primaryNav.open .icon {
		position: absolute;
		right: 14px;
		top: 112px;
	}

	main {margin-top:1em;}

/* flex columns and rows */
	.column-layout {
		-webkit-flex-direction: column;
		flex-direction: column;
	}
	
	.main-column{
	    order:1;
		border-right:none; 
		border-left:none; 
		border-bottom: 3px ridge;
	}
	.sidebar-one {order:2}
	.sidebar-two {order:3}
	aside {margin-top:4em;}
	
	.grid-container {
	  display: grid;
	  grid-template-columns: auto;
	  padding: 10px 2%;
	}
	.grid-container > div {grid-column:1/ span 3;}
	
	.first, .second {flex:100%}
}


@media screen and (max-width:500px){
	.upbutt {
		bottom: 2em; 
		top:auto;
		right:12px;
		opacity: .6;
	}
}
